1. Simple Login of Website (DONE)
    - Private Routes 
    - AuthContext (State Management)

2. Finalize the Website Routings and Pages (DONE)

3. Style the Website:
    - Get Tailwind to work (DONE) - Could be the tailwind config file...
    - Header (DONE)
    - Footer (DONE)
    - Pages 
        - Home (DONE)
        - Login (DONE)
        - Contact Us (DONE)
            - Understand the contact form and how the code works

4. Simple Form for customer details (DONE)
    - Input Validations (DONE)
    - Set up backend Server (DONE)
    - Understand how the Backend Server Works (DONE)
        - Index.js (DONE)
        - Router (DONE)
    - Data Storage with MongoDB (DONE)

5. Update Login to a secure google based login (DONE)
    - Understand your options: 
        - Firebase (Expensive) 
        - google-login (@react-oauth/google) - Just provides token, you need to set up user access in backend
        - Auth0 - Most popular option
    - Look into Auth0 integration (DONE)
        - how to add Auth0 to authcontext (DONE)
        - Look into Callbacks (DONE)
        - Set up the .env file (DONE)
        - Make sure the user stays logged in eventhough the Browser Refreshes.(DONE)

6. Create a Product Page that can be updated by loggin in with a user profile. (DONE)
    - Start with the Product page.(DONE) 
    - Link the showroom data to a database (DONE)
    - Add Images to the Database (DONE)
    - Make updates to the showroom data on a settings page. (DONE)
        - Fix the Botton Banner position on the page. (DONE)
        - List of all the entries and fields and update existing data in DB (DONE)
        - Add products and delete products (DONE)
        - Upload Image (DONE)
        - Add Description Field (DONE)
        - Add a Search Function (DONE)

7. Create a Dropdown 

8. Update All Button.

8. Add a Map to Contact Us

8. Create a Basket and a PayGate

9. Animations

10. Auth0 user Permissions and Access

11. Improve the speed of rendering quality images from MongoDB

11. Production the Application 